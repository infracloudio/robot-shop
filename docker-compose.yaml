version: '3'
services:
  mongodb:
    build:
      context: mongo
    image: ${REPO}/rs-mongodb:${TAG}
    networks:
      - robot-shop
    logging: &logging
      driver: "json-file"
      options:
        max-size: "25m"
        max-file: "2"
  redis:
    image: redis:6.2-alpine
    networks:
      - robot-shop
    logging:
      <<: *logging
  rabbitmq:
    image: rabbitmq:3.12
    networks:
      - robot-shop
    logging:
      <<: *logging
  catalogue:
    build:
      context: catalogue
    image: ${REPO}/rs-catalogue:${TAG}
    depends_on:
      - mongodb
    networks:
      - robot-shop
    environment:
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://otelcollector:4317
      OTEL_RESOURCE_ATTRIBUTES: "service.name=catalogue,service.namespace=robot-shop"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 10s
      retries: 3
    logging:
      <<: *logging
  user:
    build:
      context: user
    image: ${REPO}/rs-user:${TAG}
    depends_on:
      - mongodb
      - redis
    networks:
      - robot-shop
    environment:
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://otelcollector:4317
      OTEL_RESOURCE_ATTRIBUTES: "service.name=user,service.namespace=robot-shop"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 10s
      retries: 3
    logging:
      <<: *logging
  cart:
    build:
      context: cart
    image: ${REPO}/rs-cart:${TAG}
    depends_on:
      - redis
      - catalogue
    networks:
      - robot-shop
    environment:
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://otelcollector:4317
      OTEL_RESOURCE_ATTRIBUTES: "service.name=cart,service.namespace=robot-shop"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 10s
      retries: 3
    logging:
      <<: *logging
  mysql:
    image: mysql:8
    environment:
      - MYSQL_ROOT_PASSWORD=superdba
      - MYSQL_DATABASE=cities
      - MYSQL_USER=shipping
      - MYSQL_PASSWORD=secret
    cap_add:
      - NET_ADMIN
    networks:
      - robot-shop
    logging:
      <<: *logging
  loader:
    build:
      context: mysql-loader
    image: ${REPO}/rs-loader:${TAG}
    environment:
      - MYSQL_ROOT_PASSWORD=superdba
    depends_on:
      - mysql
    networks:
      - robot-shop
    logging:
      <<: *logging
  shipping:
    build:
      context: shipping
    image: ${REPO}/rs-shipping:${TAG}
    depends_on:
      - mysql
    networks:
      - robot-shop
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 3
    environment:
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://otelcollector:4317
      OTEL_RESOURCE_ATTRIBUTES: "service.name=shipping,service.namespace=robot-shop"
    logging:
      <<: *logging
  ratings:
    build:
      context: ratings
    image: ${REPO}/rs-ratings:${TAG}
    environment:
      APP_ENV: prod
    networks:
      - robot-shop
    depends_on:
      - mysql
      - catalogue
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/_health"]
      interval: 10s
      timeout: 10s
      retries: 3
    logging:
      <<: *logging
  payment:
    build:
      context: payment
    image: ${REPO}/rs-payment:${TAG}
    depends_on:
      - rabbitmq
    networks:
      - robot-shop
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 3
    environment:
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://otelcollector:4317
      OTEL_RESOURCE_ATTRIBUTES: "service.name=payment,service.namespace=robot-shop"
      # Uncomment to change payment gateway
      #PAYMENT_GATEWAY: "https://www.worldpay.com"
    logging:
      <<: *logging
  dispatch:
    build:
      context: dispatch
    image: ${REPO}/rs-dispatch:${TAG}
    depends_on:
      - rabbitmq
      - mongodb
    networks:
      - robot-shop
    environment:
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://otelcollector:4317
      OTEL_RESOURCE_ATTRIBUTES: "service.name=dispatch,service.namespace=robot-shop"
    logging:
      <<: *logging
  web:
    build:
      context: web
    image: ${REPO}/rs-web:${TAG}
    depends_on:
      - catalogue
      - user
      - shipping
      - payment
    ports:
      - "8080:8080"
    networks:
      - robot-shop
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/" ]
      interval: 10s
      timeout: 10s
      retries: 3
    logging:
      <<: *logging
  otelcollector:
    image: otel/opentelemetry-collector-contrib
    networks:
      - robot-shop
    ports:
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "4317"
      - "4318"
    volumes:
      - "./collector-config.yaml:/etc/otelcol-contrib/collector-config.yaml"
    logging:
      <<: *logging

networks:
  robot-shop:

